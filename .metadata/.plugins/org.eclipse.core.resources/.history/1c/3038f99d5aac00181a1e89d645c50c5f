package com.it15136466.IT15136466.controller;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.it15136466.IT15136466.model.Account;
import com.it15136466.IT15136466.model.User;

@Controller
public class CookieController {


	String random_seed = "";

	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String index() {
		return "index";
	}


	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String submit(@Valid @ModelAttribute("User") User user, BindingResult result, Model model,
			HttpServletResponse response, HttpServletRequest request) {

		
		System.out.println("called " + user.getUsername());

		if (user.getUsername().equals("kkk") && user.getPassword().equals("123")) {
			if (result.hasErrors()) {
				return "error";
			}

			Cookie c1 = new Cookie("c1", "wow");
			c1.setMaxAge(600 * 600); // 1 hour
			random_seed = "any";

			c1.setHttpOnly(false);
			c1.setSecure(false);

			response.addCookie(c1);
			
			Cookie c2 = new Cookie("csrf", "anything");
			c2.setMaxAge(600 * 600); // 1 hour
			c2.setHttpOnly(false);
			c2.setSecure(false);
			response.addCookie(c2);
			
			
			return "UserView";
		} else {
			return "error";
		}

	}



	
	
	@RequestMapping(value = "/doublecookie", method = RequestMethod.POST)
	public String transferMoneyDouble( @Valid @ModelAttribute("Account") Account account, BindingResult result, Model model,
			HttpServletResponse response, HttpServletRequest request) {

		
String r_c1 = null,r_csrf = null;
		Cookie[] cookies = request.getCookies();

	
		if (cookies != null) {
			for (Cookie cookie : cookies) {
				System.out.println("called " + cookie.getName());
				
				if(cookie.getName().equals("c1")){
					r_c1=cookie.getValue();
				}else if(cookie.getName().equals("csrf")){
					r_csrf=cookie.getValue();
				}

			}
		}


		if (r_c1.equals("wow") && account.getCsrf().equals(r_csrf)) {

			model.addAttribute("msg", "your money transfer is successfull");
			return "UserView";
		}else{
		
		return "error";
		}

	}
	



}
